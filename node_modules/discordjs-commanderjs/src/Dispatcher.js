const Commands = require('./Commands');

/**
 * @property {Commands}  commands
 */
class Dispatcher {

    constructor (options) {

        if (options.discord === undefined) throw('Discord is not defined');
        //if (typeof options.discord === 'object') throw('Discord is not type of Object');
        this.discord = options.discord;

        if (options.prefix === undefined) throw('Prefix is not defined');
        if (typeof options.prefix !== 'string') throw('Prefix is not type of String');
        this.prefix = options.prefix;

        if (options.responseOn === undefined) throw('ResponseOn is not defined');
        if (typeof options.responseOn !== 'object') throw('ReponseOn is not type of Object');

        if (options.responseOn.prefix === undefined) throw('ResponseOn.Prefix is not defined');
        if (typeof options.responseOn.prefix !== 'boolean') throw('ResponseOn.Prefix is not Boolean');

        if (options.responseOn.mention === undefined) throw('ResponseOn.Mention is not defined');
        if (typeof options.responseOn.mention !== 'boolean') throw('ResponseOn.Mention is not Boolean');
        this.responseOn = options.responseOn;

        if (options.commands === undefined) throw('Commands is not defined');
        if (!(options.commands instanceof Commands)) throw('Commands is not instance of Commands class');
        this.commands = options.commands;

        if (options.deleteCommand === undefined) throw('DeleteCommand is not defined');
        if (typeof options.deleteCommand !== 'boolean') throw('DeleteCommand is not Boolean');
        this.deleteCommand = options.deleteCommand;

        if (options.options !== undefined) this.options = options.options;
    }

    launch (message) {

        if (message.author.bot) return false;
        this.tag = `<@${message.client.user.id}>`;

        let args = null;
        if (this.responseOn.mention && message.content.indexOf(this.tag) === 0) args = message.content.slice(this.tag.length).trim().split(/ +/g);
        if (this.responseOn.prefix && message.content.indexOf(this.prefix) === 0) args = message.content.slice(this.prefix.length).trim().split(/ +/g);
        if (args === null) return false;

        const command = args.shift().toLowerCase();

        if (this.commands.isCommand(command) === null) {
            this.commands.callUnknownCommand();
            return;
        }
        if (this.deleteCommand && message.channel.type === 'text') message.delete().catch(console.error);
        let options = {
            discord: this.discord,
            prefix: this.prefix,
            responseOn: this.responseOn
        };
        if (this.options !== undefined) options = {...options, ...this.options};
        this.commands.call(command, message, args, options);

    }

}

module.exports = Dispatcher;